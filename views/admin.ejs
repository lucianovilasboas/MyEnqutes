<!DOCTYPE html>
<html>

<head>
  <title>
    <%= title %>
  </title>
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css"
    integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.3/dist/jquery.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox.min.js"></script>
</head>

<body>
  <div class="container">
    <h1>
      <%= title %>
    </h1>


    <h2 class="text-center">Perguntas
      <br>
      <div  class="btn-group btn-group-sm" >
      <button id="btNovaEnquete" class="btn btn-sm btn-success">Nova pergunta</button>
      <button id="btReabrirEnquete" class="btn btn-sm btn-danger">Reabrir enquete</button>
      <button id="btSortear" class="btn btn-sm btn-primary">Sortear</button>
      </div>
    </h2>
    <div class="list-group" id="perguntas"></div>

    <hr>
    <h5>Usuários conectados</h5>
    <ul class="list-group" id="users"></ul>

    <hr>
    <h5>Usuários sorteados</h5>
    <ul class="list-group" id="usersSortudos"></ul>

    <!-- <p>Respostas</p>
  <ul id="respostas"></ul> -->

  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    var socket = io();

    const ADMIN = "admin";

    socket.emit('login', { "nome": "Luciano", "email": "lucianovilasboas@gmail.com", "type": ADMIN });

    socket.on("admin_users", (users) => {

      // console.table( users );

      let ul = document.querySelector("#users");
      ul.innerHTML = "";

      users.forEach(user => {
        if (user.type != ADMIN) {
          let is_voted = '';
          for (const [key, value] of Object.entries(user.is_voted)) {
            is_voted += `<b>${key}</b>: <i>${value}</i>, `;
          }
          // ul.innerHTML += `<li class="list-group-item" > <i class="fas fa-user ${user.online ? "c-green" : "c-red" }"></i> ${user.name} [${user.email}]</li>`;

          if (user.online) {
            ul.innerHTML += `<li class="list-group-item" > <i class="fas fa-user c-green"></i> ${user.name} [${user.email}]</li>`;
          }


        }
      });

    });

    socket.on("admin_perguntas", (questions) => {

      // console.table( questions );

      let ul = document.querySelector("#perguntas");
      ul.innerHTML = "";

      questions.forEach(quest => {

        let display = quest.status ? 'none' : 'inline';

        let opt = quest.options.map(o => o.i).join(', ');
        let votes = '';

        for (const [key, value] of Object.entries(quest.votes)) {
          votes += `<b>${key}</b>: <i>${value}</i>, `;
        }

        ul.innerHTML += `<div class="list-group-item list-group-item-action flex-column align-items-start">
                            <div class="d-flex w-100 justify-content-between">
                              <h5 class="mb-1">${quest.q}</h5>
                              <small><i class="fas fa-heart c-red"></i> ${quest.users.length}</small>
                            </div>
                            <p class="mb-1"><b>Opções</b>: ${opt}</p>
                            <p class="mb-1"><b>Respostas</b>: [${votes}]</p>
                            <p class="mb-1">
                              <button class="btn btn-sm btn-primary" data-pergunta="${quest.id}" style="display: ${display};" >Enviar </button>
                          
                              <button class="btn btn-sm btn-danger float-right" data-pergunta="${quest.id}" ><i class="fas fa-trash" aria-hidden="true"></i></button>
                            </p>
                          </div>`;


      });

      document.querySelectorAll("div > p > button.btn.btn-sm.btn-primary").forEach(bt => {
        bt.addEventListener('click', (evt) => {
          evt.preventDefault();
          let qId = evt.target.getAttribute("data-pergunta");
          socket.emit('enviar_pergunta', qId);
          evt.target.style.display = 'none';
        });
      });


      document.querySelectorAll("div > p > button.btn.btn-sm.btn-danger").forEach(bt => {
        bt.addEventListener('click', (evt) => {
          evt.preventDefault();

          bootbox.confirm("Deseja realmente excluir essa pergunta?", (confirm) => {
            if (confirm) {
              let qId = evt.target.getAttribute("data-pergunta");
              socket.emit('admin_excluir_pergunta', qId);
              //evt.target.style.display = 'none';
            }
          });
        });
      });


    });

    socket.on('admin_sortudos', users => {
      console.clear();
      console.table(users.map(u => u.name));
      let ul = document.querySelector("#usersSortudos");
      ul.innerHTML = "";

      users.forEach(user => {
        if (user.type != ADMIN) {
          ul.innerHTML += `<li class="list-group-item" > <i class="fas fa-smile c-green"></i> ${user.name}</li>`;
        }
      });
    });

    socket.on('admin_sortudos_finalizou', () => {
      bootbox.alert("Todos já foram sorteados.");
    });

    document.querySelector('button#btReabrirEnquete').addEventListener('click', evt => {
      evt.preventDefault();
      bootbox.confirm("Deseja realmente reabrir a enquete?", (confirm) => {
        if (confirm)
          socket.emit("admin_reabrir_enquete");
      });
    });

    document.querySelector('button#btSortear').addEventListener('click', evt => {
      evt.preventDefault();
      bootbox.prompt({
        title: 'Quantos?',
        inputType: 'number',
        value: 1,
        callback: (n) => {
          socket.emit("admin_sortear", n);
        }
      });
    });


    document.querySelector('button#btNovaEnquete').addEventListener('click', evt => {
      evt.preventDefault();

      bootbox.prompt({
        title: '<small>Escreva a pergunta no formato:<br>Pergunta<br>opcao1<br>opcao2<br>...</small>',
        inputType: 'textarea',

        callback: function (text) {
          console.log(text);
          if (text) {
            let qtext = text.split('\n');
            let options = [];
            for (let i = 1; i < qtext.length; i++) {
              let qtext_ = qtext[i].trim();
              if(qtext_)
                options.push({ "i": qtext_ });
            }
            socket.emit('admin_nova_pergunta', { "q": qtext[0], options});
          }
        }

      });


    });

  </script>

</body>

</html>